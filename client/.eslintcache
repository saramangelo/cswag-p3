[{"/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/index.js":"1","/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/App.js":"2","/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/pages/Dashboard.js":"3","/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/components/Navbar.js":"4","/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/components/DashboardTable.js":"5","/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/components/Welcome.js":"6","/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/components/TicketModal.js":"7","/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/pages/Login.js":"8","/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/components/loginCard.js":"9","/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/components/signUpForm.js":"10","/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/components/loginForm.js":"11","/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/utils/mutations.js":"12","/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/utils/auth.js":"13"},{"size":414,"mtime":1675987160099,"results":"14","hashOfConfig":"15"},{"size":1556,"mtime":1676067109023,"results":"16","hashOfConfig":"15"},{"size":448,"mtime":1676054428215,"results":"17","hashOfConfig":"15"},{"size":446,"mtime":1676054428212,"results":"18","hashOfConfig":"15"},{"size":1624,"mtime":1676054428211,"results":"19","hashOfConfig":"15"},{"size":229,"mtime":1676054428213,"results":"20","hashOfConfig":"15"},{"size":4620,"mtime":1676054428212,"results":"21","hashOfConfig":"15"},{"size":453,"mtime":1676067109026,"results":"22","hashOfConfig":"15"},{"size":436,"mtime":1676067109024,"results":"23","hashOfConfig":"15"},{"size":1313,"mtime":1676067109025,"results":"24","hashOfConfig":"15"},{"size":2280,"mtime":1676067109025,"results":"25","hashOfConfig":"15"},{"size":1077,"mtime":1676067109027,"results":"26","hashOfConfig":"15"},{"size":1043,"mtime":1676067109026,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x3so7u",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/index.js",[],"/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/App.js",[],"/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/pages/Dashboard.js",[],"/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/components/Navbar.js",[],"/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/components/DashboardTable.js",[],"/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/components/Welcome.js",[],"/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/components/TicketModal.js",[],"/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/pages/Login.js",[],"/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/components/loginCard.js",[],"/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/components/signUpForm.js",[],"/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/components/loginForm.js",["56","57"],"import Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\nimport { useState } from \"react\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport { useMutation } from \"@apollo/client\";\n\nimport Auth from \"../utils/auth\";\n\n// CSWAG\nfunction LoginForm({ setUser }) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleBlur = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleViewLoginCard = () => {\n    setUser(true);\n  };\n  // submit form\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <Container>\n      <h1>Login</h1>\n      <Form>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            onBlur={handleBlur}\n            type=\"email\"\n            placeholder=\"Enter email\"\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            onBlur={handleBlur}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n        <Container>\n          <Button\n            onClick={handleSubmit}\n            className=\"mr-1 mb-2\"\n            variant=\"primary\"\n            type=\"submit\"\n          >\n            Log in\n          </Button>\n          <Button\n            onClick={handleViewLoginCard}\n            className=\"mb-2\"\n            variant=\"primary\"\n            type=\"submit\"\n          >\n            Sign up\n          </Button>\n        </Container>\n      </Form>\n    </Container>\n  );\n}\n\nexport default LoginForm;\n","/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/utils/mutations.js",[],"/Users/m4g4/Desktop/uclabootcamp/projects/cswag-p3/client/src/utils/auth.js",["58"],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n",{"ruleId":"59","severity":1,"message":"60","line":13,"column":19,"nodeType":"61","messageId":"62","endLine":13,"endColumn":24},{"ruleId":"59","severity":1,"message":"63","line":13,"column":26,"nodeType":"61","messageId":"62","endLine":13,"endColumn":30},{"ruleId":"64","severity":1,"message":"65","line":41,"column":1,"nodeType":"66","endLine":41,"endColumn":34},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration"]