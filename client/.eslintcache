[{"/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/index.js":"1","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/App.js":"2","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/pages/Login.js":"3","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/pages/NotFound.js":"4","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/pages/Dashboard.js":"5","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/components/Navbar.js":"6","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/components/LoginCard.js":"7","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/components/Welcome.js":"8","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/components/DashboardTable.js":"9","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/components/LoginForm.js":"10","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/components/SignUpForm.js":"11","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/components/TicketModal.js":"12","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/utils/auth.js":"13","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/utils/mutations.js":"14","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/components/Sidebar.js":"15","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/pages/ViewTicket.js":"16","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/utils/queries.js":"17"},{"size":387,"mtime":1676137036872,"results":"18","hashOfConfig":"19"},{"size":1847,"mtime":1676239862194,"results":"20","hashOfConfig":"19"},{"size":356,"mtime":1676137657052,"results":"21","hashOfConfig":"19"},{"size":391,"mtime":1676136251109,"results":"22","hashOfConfig":"19"},{"size":575,"mtime":1676239862196,"results":"23","hashOfConfig":"19"},{"size":532,"mtime":1676239862194,"results":"24","hashOfConfig":"19"},{"size":436,"mtime":1676067097672,"results":"25","hashOfConfig":"19"},{"size":395,"mtime":1676136214647,"results":"26","hashOfConfig":"19"},{"size":995,"mtime":1676153479549,"results":"27","hashOfConfig":"19"},{"size":2424,"mtime":1676136214648,"results":"28","hashOfConfig":"19"},{"size":2430,"mtime":1676136214649,"results":"29","hashOfConfig":"19"},{"size":6836,"mtime":1676153479550,"results":"30","hashOfConfig":"19"},{"size":1136,"mtime":1676067097678,"results":"31","hashOfConfig":"19"},{"size":1325,"mtime":1676239862197,"results":"32","hashOfConfig":"19"},{"size":695,"mtime":1676239862195,"results":"33","hashOfConfig":"19"},{"size":1185,"mtime":1676239862197,"results":"34","hashOfConfig":"19"},{"size":1031,"mtime":1676239862198,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"tp8bp3",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/index.js",[],["75","76"],"/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/App.js",[],"/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/pages/Login.js",[],"/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/pages/NotFound.js",[],"/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/pages/Dashboard.js",[],"/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/components/Navbar.js",[],"/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/components/LoginCard.js",[],"/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/components/Welcome.js",[],"/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/components/DashboardTable.js",[],"/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/components/LoginForm.js",["77","78"],"import Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\nimport { useState } from \"react\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport { useMutation } from \"@apollo/client\";\n\nimport Auth from \"../utils/auth\";\n\nfunction LoginForm({ setUser }) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    localStorage.setItem(\"test\", 2)\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleViewLoginCard = () => {\n    setUser(true);\n  };\n  // submit form\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    localStorage.setItem(\"test\", 2)\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n      console.log(data)\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <Container>\n      <h1>Login</h1>\n      <Form>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            name=\"email\"\n            onChange={handleChange}\n            type=\"email\"\n            placeholder=\"Enter email\"\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n        <Container>\n          <Button\n            onClick={handleSubmit}\n            className=\"mr-1 mb-2\"\n            variant=\"dark\"\n            type=\"submit\"\n          >\n            Log in\n          </Button>\n          <Button\n            onClick={handleViewLoginCard}\n            className=\"mb-2\"\n            variant=\"danger\"\n            type=\"submit\"\n          >\n            Sign up\n          </Button>\n        </Container>\n      </Form>\n    </Container>\n  );\n}\n\nexport default LoginForm;\n","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/components/SignUpForm.js",["79","80"],"import Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport { useState } from \"react\";\n\nimport Auth from \"../utils/auth\";\n\nfunction SignUpForm({ setUser }) {\n  const handleViewLoginCard = () => {\n    setUser(false);\n  };\n\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    console.log(name, value);\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <Container>\n      <h1>Sign Up</h1>\n      <Form>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control name=\"email\"\n            onChange={handleChange}\n            type=\"email\"\n            placeholder=\"Enter email\"\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n        <Button\n          onClick={handleSubmit}\n          className=\"mb-2 mr-1\"\n          variant=\"dark\"\n          type=\"submit\"\n        >\n          Sign up\n        </Button>\n        <Button\n          className=\"mb-2\"\n          onClick={handleViewLoginCard}\n          variant=\"danger\"\n          type=\"submit\"\n        >\n          Back to login\n        </Button>\n      </Form>\n    </Container>\n  );\n}\n\nexport default SignUpForm;\n","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/components/TicketModal.js",["81"],"import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { useMutation } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\n\nimport { ADD_TICKET } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst styles = {\n  button: {\n    fontFamily: \"Rubik Mono One, sans-serif\",\n  },\n};\n\nfunction TicketModal({ ticketId }) {\n  const [ticketTitle, setTitle] = useState(\"\");\n  const [ticketDescription, setDescription] = useState(\"\");\n  const [ticketType, setType] = useState(\"\");\n  const [ticketPriority, setPriority] = useState(\"\");\n  const [ticketStatus, setStatus] = useState(\"\");\n\n  const [addTicket, { error }] = useMutation(ADD_TICKET);\n\n  // handle form submit\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addTicket({\n        variables: {\n          ticketId,\n          ticketTitle,\n          ticketDescription,\n          ticketType,\n          ticketPriority,\n          ticketStatus,\n          ticketAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n\n\n      setTitle(\"\");\n      setDescription(\"\");\n      setType(\"\");\n      setPriority(\"\");\n      setStatus(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // handle change\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === \"title\") {\n      console.log(\"title:\", value)\n      setTitle(value);\n      console.log(ticketTitle)\n    }\n    if (name === \"description\") {\n      console.log(\"description:\", value)\n      setDescription(value);\n      console.log(ticketDescription)\n    }\n    if (name === \"type\") {\n      console.log(\"type:\", value)\n      setType(value);\n      console.log(ticketType)\n    }\n    if (name === \"priority\") {\n      console.log(\"priority:\", value)\n      setPriority(value);\n      console.log(ticketPriority)\n    }\n    if (name === \"status\") {\n      console.log(\"status:\", value)\n      setStatus(value);\n      console.log(ticketStatus)\n    }\n  };\n\n  // modal variable states\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      {Auth.loggedIn() ? (\n        <>\n          <p className={`m-0 ${error ? \"text-danger\" : \"\"}`}>\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <Button style={styles.button} variant=\"dark\" onClick={handleShow}>\n            Create a ticket\n          </Button>\n\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>New Ticket</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Form onSubmit={handleSubmit}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicTitle\">\n                  <Form.Label>Title</Form.Label>\n                  <Form.Control\n                    value={ticketTitle}\n                    onChange={handleChange}\n                    name=\"title\"\n                    type=\"title\"\n                    placeholder=\"Enter ticket title\"\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Please give your ticket a title.\n                  </Form.Text>\n                </Form.Group>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlTextarea1\"\n                >\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control\n                    value={ticketDescription}\n                    onChange={handleChange}\n                    name=\"description\"\n                    as=\"textarea\"\n                    rows={3}\n                    type=\"\"\n                    placeholder=\"Ticket Description\"\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Please give your ticket a brief description.\n                  </Form.Text>\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicStatus\">\n                  <Form.Label>Type</Form.Label>\n                  <Form.Select\n                    value={ticketType}\n                    onChange={handleChange}\n                    name=\"type\"\n                    aria-label=\"Default select example\"\n                  >\n                    <option>Select Type</option>\n                    <option value=\"Front End\">Front End</option>\n                    <option value=\"API\">API</option>\n                    <option value=\"Back End\">Back End</option>\n                  </Form.Select>\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicType\">\n                  <Form.Label>Priority</Form.Label>\n                  <Form.Select\n                    value={ticketPriority}\n                    onChange={handleChange}\n                    name=\"priority\"\n                    aria-label=\"Default select example\"\n                  >\n                    <option>Select Priority</option>\n                    <option value=\"Urgent\">Urgent</option>\n                    <option value=\"High\">High</option>\n                    <option value=\"Medium\">Medium</option>\n                    <option value=\"Low\">Low</option>\n                  </Form.Select>\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPriority\">\n                  <Form.Label>Status</Form.Label>\n                  <Form.Select\n                    value={ticketStatus}\n                    onChange={handleChange}\n                    name=\"status\"\n                    aria-label=\"Default select example\"\n                  >\n                    <option>Select Status</option>\n                    <option value=\"Archived\">Archived</option>\n                    <option value=\"Resolved\">Resolved</option>\n                    <option value=\"Testing\">Testing</option>\n                    <option value=\"Development\">Development</option>\n                    <option value=\"Unassigned\">Unassigned</option>\n                    <option value=\"New\">New</option>\n                  </Form.Select>\n                </Form.Group>\n              </Form>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"dark\" onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button variant=\"dark\" onClick={handleClose}>\n                Submit ticket\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{\" \"}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </>\n  );\n}\n\nexport default TicketModal;\n","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/utils/auth.js",["82"],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      console.log(\"token was removed\")\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    console.log(idToken, \"my token is here\")\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/dashboard');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/utils/mutations.js",[],"/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/components/Sidebar.js",[],"/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/pages/ViewTicket.js",[],"/Users/saraangelo/Desktop/ucla-bootcamp/projects/cswag-p3/client/src/utils/queries.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":12,"column":19,"nodeType":"89","messageId":"90","endLine":12,"endColumn":24},{"ruleId":"87","severity":1,"message":"91","line":12,"column":26,"nodeType":"89","messageId":"90","endLine":12,"endColumn":30},{"ruleId":"87","severity":1,"message":"88","line":19,"column":21,"nodeType":"89","messageId":"90","endLine":19,"endColumn":26},{"ruleId":"87","severity":1,"message":"91","line":19,"column":28,"nodeType":"89","messageId":"90","endLine":19,"endColumn":32},{"ruleId":"87","severity":1,"message":"91","line":32,"column":15,"nodeType":"89","messageId":"90","endLine":32,"endColumn":19},{"ruleId":"92","severity":1,"message":"93","line":43,"column":1,"nodeType":"94","endLine":43,"endColumn":34},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]